// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using maui_project1.Model;
//
//    var croustreq = Croustreq.FromJson(jsonString);

namespace maui_project1.Model
{
	using System;
	using System.Collections.Generic;

	using System.Globalization;
	using Newtonsoft.Json;
	using Newtonsoft.Json.Converters;

	public partial class Croustreq
	{

		[JsonProperty("courseId")]
		public string CourseId { get; set; }

		[JsonProperty("courseName")]
		public string CourseName { get; set; }

		[JsonProperty("courseDescription")]
		public string CourseDescription { get; set; }

		[JsonProperty("creditHours")]
		public long CreditHours { get; set; }

		[JsonProperty("department")]
		public string Department { get; set; }

		[JsonProperty("semester")]
		public string Semester { get; set; }

		[JsonProperty("availableSeats")]
		public long AvailableSeats { get; set; }
	}

	public partial class Croustreq
	{
		public static Croustreq FromJson(string json) => JsonConvert.DeserializeObject<Croustreq>(json, maui_project1.Model.Converter.Settings);
	}

	public static class Serialize
	{
		public static string ToJson(this Croustreq self) => JsonConvert.SerializeObject(self, maui_project1.Model.Converter.Settings);
	}

	internal static class Converter
	{
		public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
		{
			MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
			DateParseHandling = DateParseHandling.None,
			Converters =
			{
				new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
			},
		};
	}
}
